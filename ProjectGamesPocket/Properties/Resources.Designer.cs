//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectGamesPocket.Properties {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ProjectGamesPocket.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Not allowed characters in field .
        /// </summary>
        public static string errorAddGameChar {
            get {
                return ResourceManager.GetString("errorAddGameChar", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wrong format of double value in field.
        /// </summary>
        public static string errorAddGameDouble {
            get {
                return ResourceManager.GetString("errorAddGameDouble", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wrong format of int value in field.
        /// </summary>
        public static string errorAddGameInt {
            get {
                return ResourceManager.GetString("errorAddGameInt", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Game records can not be added!.
        /// </summary>
        public static string errorAddGameNewGame {
            get {
                return ResourceManager.GetString("errorAddGameNewGame", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Complete all fields!.
        /// </summary>
        public static string errorAllFields {
            get {
                return ResourceManager.GetString("errorAllFields", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Error.
        /// </summary>
        public static string errorError {
            get {
                return ResourceManager.GetString("errorError", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The minimum login length is 5, and the maximum is 15.
        /// </summary>
        public static string errorLogLen {
            get {
                return ResourceManager.GetString("errorLogLen", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The password should contain at least one uppercase letter, one lowercase letter and one number!.
        /// </summary>
        public static string errorPassDesign {
            get {
                return ResourceManager.GetString("errorPassDesign", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The minimum password length is 6 and the maximum is 16.
        /// </summary>
        public static string errorPassLen {
            get {
                return ResourceManager.GetString("errorPassLen", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Passwords do not match!.
        /// </summary>
        public static string errorPassMatch {
            get {
                return ResourceManager.GetString("errorPassMatch", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu No.
        /// </summary>
        public static string gameEx1 {
            get {
                return ResourceManager.GetString("gameEx1", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu GBA.
        /// </summary>
        public static string gameEx10 {
            get {
                return ResourceManager.GetString("gameEx10", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu PS2.
        /// </summary>
        public static string gameEx11 {
            get {
                return ResourceManager.GetString("gameEx11", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu PS3.
        /// </summary>
        public static string gameEx12 {
            get {
                return ResourceManager.GetString("gameEx12", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu PS4.
        /// </summary>
        public static string gameEx13 {
            get {
                return ResourceManager.GetString("gameEx13", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu X360.
        /// </summary>
        public static string gameEx14 {
            get {
                return ResourceManager.GetString("gameEx14", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu iOS.
        /// </summary>
        public static string gameEx15 {
            get {
                return ResourceManager.GetString("gameEx15", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu AND.
        /// </summary>
        public static string gameEx16 {
            get {
                return ResourceManager.GetString("gameEx16", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu GCN.
        /// </summary>
        public static string gameEx17 {
            get {
                return ResourceManager.GetString("gameEx17", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu PC.
        /// </summary>
        public static string gameEx18 {
            get {
                return ResourceManager.GetString("gameEx18", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wii.
        /// </summary>
        public static string gameEx2 {
            get {
                return ResourceManager.GetString("gameEx2", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Switch.
        /// </summary>
        public static string gameEx3 {
            get {
                return ResourceManager.GetString("gameEx3", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu NDS.
        /// </summary>
        public static string gameEx4 {
            get {
                return ResourceManager.GetString("gameEx4", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu PSP.
        /// </summary>
        public static string gameEx5 {
            get {
                return ResourceManager.GetString("gameEx5", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 3DS.
        /// </summary>
        public static string gameEx6 {
            get {
                return ResourceManager.GetString("gameEx6", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu PS1.
        /// </summary>
        public static string gameEx7 {
            get {
                return ResourceManager.GetString("gameEx7", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu PSV.
        /// </summary>
        public static string gameEx8 {
            get {
                return ResourceManager.GetString("gameEx8", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu XBOX.
        /// </summary>
        public static string gameEx9 {
            get {
                return ResourceManager.GetString("gameEx9", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu YES.
        /// </summary>
        public static string gameIsSeries1 {
            get {
                return ResourceManager.GetString("gameIsSeries1", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu NO.
        /// </summary>
        public static string gameIsSeries2 {
            get {
                return ResourceManager.GetString("gameIsSeries2", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 3.
        /// </summary>
        public static string gamePEGI1 {
            get {
                return ResourceManager.GetString("gamePEGI1", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 7.
        /// </summary>
        public static string gamePEGI2 {
            get {
                return ResourceManager.GetString("gamePEGI2", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 12.
        /// </summary>
        public static string gamePEGI3 {
            get {
                return ResourceManager.GetString("gamePEGI3", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 16.
        /// </summary>
        public static string gamePEGI4 {
            get {
                return ResourceManager.GetString("gamePEGI4", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 18.
        /// </summary>
        public static string gamePEGI5 {
            get {
                return ResourceManager.GetString("gamePEGI5", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Action.
        /// </summary>
        public static string gameType1 {
            get {
                return ResourceManager.GetString("gameType1", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Racing.
        /// </summary>
        public static string gameType10 {
            get {
                return ResourceManager.GetString("gameType10", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Fighting.
        /// </summary>
        public static string gameType11 {
            get {
                return ResourceManager.GetString("gameType11", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Strategy.
        /// </summary>
        public static string gameType2 {
            get {
                return ResourceManager.GetString("gameType2", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Party.
        /// </summary>
        public static string gameType3 {
            get {
                return ResourceManager.GetString("gameType3", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Logic.
        /// </summary>
        public static string gameType4 {
            get {
                return ResourceManager.GetString("gameType4", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu RPG.
        /// </summary>
        public static string gameType5 {
            get {
                return ResourceManager.GetString("gameType5", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Arcade.
        /// </summary>
        public static string gameType6 {
            get {
                return ResourceManager.GetString("gameType6", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Simulation.
        /// </summary>
        public static string gameType7 {
            get {
                return ResourceManager.GetString("gameType7", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Adventure.
        /// </summary>
        public static string gameType8 {
            get {
                return ResourceManager.GetString("gameType8", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Sport.
        /// </summary>
        public static string gameType9 {
            get {
                return ResourceManager.GetString("gameType9", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Information.
        /// </summary>
        public static string info {
            get {
                return ResourceManager.GetString("info", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu If the game has been released on several platforms, please provide the earliest release date..
        /// </summary>
        public static string infoDate {
            get {
                return ResourceManager.GetString("infoDate", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu If the game has been released on one platform, select it. If, however, the game has been released on more than one platform, select &quot;No&quot;..
        /// </summary>
        public static string infoExc {
            get {
                return ResourceManager.GetString("infoExc", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu If the game is part of a series or universe, select &quot;Yes&quot;, otherwise select &quot;no&quot;..
        /// </summary>
        public static string infoIsSeries {
            get {
                return ResourceManager.GetString("infoIsSeries", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Metacritic is a website that aggregates reviews of films, TV shows, music albums, video games and formerly, books. For each product, the scores from each review are averaged.\n\nScore index\nUniversal acclaim 90–100\nGenerally favorable reviews 75–89\nMixed or average reviews 50–74\nGenerally unfavorable reviews 20–49\nOverwhelming dislike 0-19.
        /// </summary>
        public static string infoMeta {
            get {
                return ResourceManager.GetString("infoMeta", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Pan European Game Information (PEGI) is a European video game content rating system established to help European consumers make informed decisions when buying video games or apps through the use of age recommendations and content descriptors.\n\n-3-\nThe content of games with a PEGI 3 rating is considered suitable for all age groups. The game should not contain any sounds or pictures that are likely to frighten young children. A very mild form of violence (in a comical context or a childlike setting) is acc [obcięto pozostałą część ciągu]&quot;;.
        /// </summary>
        public static string infoPEGI {
            get {
                return ResourceManager.GetString("infoPEGI", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The price of the game should be given in zlotys (PLN)..
        /// </summary>
        public static string infoPrice {
            get {
                return ResourceManager.GetString("infoPrice", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu If the game has several types or sub-types, the main type should be given..
        /// </summary>
        public static string infoType {
            get {
                return ResourceManager.GetString("infoType", resourceCulture);
            }
        }
    }
}
